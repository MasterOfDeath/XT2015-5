@using Employees.PL.Web
@{ 
    var logicProvider = LogicProvider.Instance;
    string result;

    if (IsAjax)
    {
        var queryName = Request["queryName"];
        var userId = string.Empty;
        var awardId = string.Empty;
        WebImage image;

        switch (queryName)
        {
            case "clickSaveEmployee":
                userId = Request["userid"];
                var name = Request["name"];
                var date = Request["date"];
                result = logicProvider.ClickSaveEmployee(userId, name, date);
                break;

            case "clickDeleteEmployee":
                userId = Request["userid"];
                result = logicProvider.ClickDeleteEmployee(userId);
                break;

            case "clickSaveAward":
                awardId = Request["awardid"];
                var title = Request["title"];
                result = logicProvider.ClickSaveAward(awardId, title);
                break;

            case "clickDeleteAward":
                awardId = Request["awardid"];
                result = logicProvider.ClickDeleteAward(awardId);
                break;

            case "clickGiveAward":
                userId = Request["userid"];
                awardId = Request["awardid"];
                result = logicProvider.ClickGiveAward(userId, awardId);
                break;

            case "clickRevokeAward":
                userId = Request["userid"];
                awardId = Request["awardid"];
                result = logicProvider.ClickRevokeAward(userId, awardId);
                break;

            case "giveMeAllAwardsTable":
                result = logicProvider.makeHtmlTable(
                    logicProvider.AwardLogic.GetAllAwards());
                break;

            case "giveMeEmployeesAwardsTable":
                userId = Request["userid"];
                result = logicProvider.makeHtmlTable(
                    logicProvider.AwardLogic.GetAwardsByUserId(Convert.ToInt32(userId)));
                break;

            case "hasAwardOwners":
                awardId = Request["awardid"];
                result = logicProvider.UserLogic.ListUsersByAwardId(
                    Convert.ToInt32(awardId)).Any().ToString();
                break;

            case "uploadUserImage":
                userId = Request["userid"];
                image = WebImage.GetImageFromRequest();
                image.Resize(width: 150, height: 150, preserveAspectRatio: true, preventEnlarge: true);
                result = logicProvider.UploadUserImage(
                    userId, image.GetBytes(), "image/" + image.ImageFormat);
                break;

            case "uploadAwardImage":
                awardId = Request["awardid"];
                image = WebImage.GetImageFromRequest();
                image.Resize(width: 150, height: 150, preserveAspectRatio: true, preventEnlarge: true);
                result = logicProvider.UploadAwardImage(
                    awardId, image.GetBytes(), "image/" + image.ImageFormat);
                break;

            default:
                result = "null";
                break;
        }

        Response.Write("{\"answer\": \"" + result + "\"}");
    }
}
